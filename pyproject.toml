[tool.poetry]
name = "caddy"
version = "2.3.12"
description = "Lightweight application service to harvest and index the cadastre dataset, and expose an API endpoint to allow full-text searching of addresses."
authors = ["Ashley Felton <ashley.felton@dbca.wa.gov.au>"]
license = "Apache License 2.0"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
django = "4.2.16"
psycopg = { version = "3.2.3", extras = ["binary", "pool"] }
python-dotenv = "1.0.1"
dj-database-url = "2.2.0"
django-extensions = "3.2.3"
requests = "2.32.3"
django-tastypie = "0.14.7"
bottle = "0.13.2"
gunicorn = "23.0.0"
mixer = "7.2.2"
fudgeo = "0.8.1"
sqlalchemy = "2.0.36"
azure-storage-blob = "12.23.1"
orjson = "3.10.12"

[tool.poetry.group.dev.dependencies]
ipython = "^8.30.0"
ipdb = "^0.13.13"
pre-commit = "^4.0.1"

# Reference: https://docs.astral.sh/ruff/configuration/
[tool.ruff]
line-length = 120

[tool.ruff.lint]
ignore = [
  "E501", # Line too long
  "E722", # Bare except
]

# Reference: https://www.djlint.com/docs/configuration/
[tool.djlint]
profile = "django"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.masonry.api"
